
attribute vec3 position, anchor, quantity;

uniform mat4 viewProjection;
uniform float time;
uniform vec2 resolution;

varying vec2 vUV;
varying vec4 vColor;
varying vec3 vView;
varying vec3 vNormal;

vec3 curve2 (float ratio) {
	ratio *= PI;
	ratio += mod(time, TAU);
	float radius = .5;
	radius += .3*sin(ratio+quantity.x*PI);
	vec3 pos = vec3(radius,0,0);
	pos.xy *= rot(quantity.x*PI);
	pos.xz *= rot(quantity.x*PI);
	pos.xz *= rot(ratio*4.);
	pos.yz *= rot(ratio*2.);
	pos.yx *= rot(ratio*3.);
	return pos;
}




vec2 cs (float a) { return vec2(cos(a),sin(a)); }

vec2 fourier () {
	float t = anchor.y * PI;
	// return vec2((vec2(1,0)*0.53+vec2(cs(t*1.+1.52))*0.13+vec2(cs(t*2.+1.42))*0.08+vec2(cs(t*3.+1.28))*0.06+vec2(cs(t*4.+1.69))*0.04+vec2(cs(t*5.+1.49))*0.04+vec2(cs(t*6.+-1.82))*0.01+vec2(cs(t*7.+1.25))*0.02+vec2(cs(t*8.+0.86))*0.03+vec2(cs(t*9.+1.66))*0.02+vec2(cs(t*10.+1.57))*0.02+vec2(cs(t*11.+1.22))*0.03+vec2(cs(t*12.+1.42))*0.02+vec2(cs(t*13.+1.57))*0.01+vec2(cs(t*14.+1.14))*0.01).x,(vec2(1,0)*0.50+vec2(cs(t*1.+0.79))*0.02+vec2(cs(t*2.+-1.36))*0.02+vec2(cs(t*3.+-0.40))*0.02+vec2(cs(t*4.+-1.29))*0.01+vec2(cs(t*5.+-0.72))*0.02+vec2(cs(t*6.+-2.84))*0.02+vec2(cs(t*7.+-1.18))*0.01+vec2(cs(t*8.+0.47))*0.00+vec2(cs(t*9.+-2.41))*0.01+vec2(cs(t*10.+-0.63))*0.01+vec2(cs(t*11.+0.40))*0.01+vec2(cs(t*12.+-0.89))*0.01+vec2(cs(t*13.+-1.26))*0.01+vec2(cs(t*14.+-2.25))*0.01).x);
	// return vec2((vec2(1,0)*0.43+vec2(cs(t*1.+1.41))*0.06+vec2(cs(t*2.+-0.24))*0.02+vec2(cs(t*3.+1.12))*0.05+vec2(cs(t*4.+-1.71))*0.06+vec2(cs(t*5.+0.15))*0.02+vec2(cs(t*6.+0.90))*0.01+vec2(cs(t*7.+1.48))*0.01+vec2(cs(t*8.+2.76))*0.01+vec2(cs(t*9.+2.45))*0.00).x,(vec2(1,0)*0.47+vec2(cs(t*1.+-0.89))*0.09+vec2(cs(t*2.+-1.99))*0.05+vec2(cs(t*3.+-0.75))*0.03+vec2(cs(t*4.+-2.85))*0.03+vec2(cs(t*5.+-1.70))*0.02+vec2(cs(t*6.+-1.78))*0.01+vec2(cs(t*7.+-1.07))*0.01+vec2(cs(t*8.+-1.05))*0.00+vec2(cs(t*9.+-2.25))*0.00).x);
	// return vec2((vec2(1,0)*0.48+vec2(cs(t*1.+-0.14))*0.05+vec2(cs(t*2.+1.99))*0.12+vec2(cs(t*3.+1.06))*0.04).x,(vec2(1,0)*0.44+vec2(cs(t*1.+-0.54))*0.09+vec2(cs(t*2.+-2.22))*0.12+vec2(cs(t*3.+-1.87))*0.02).x);
	// return vec2((vec2(1,0)*0.48+vec2(cs(t*1.+-0.14))*0.05+vec2(cs(t*2.+1.99))*0.12+vec2(cs(t*3.+1.06))*0.04+vec2(cs(t*4.+1.63))*0.04+vec2(cs(t*5.+1.35))*0.03+vec2(cs(t*6.+1.62))*0.02+vec2(cs(t*7.+1.50))*0.02+vec2(cs(t*8.+1.39))*0.01+vec2(cs(t*9.+1.58))*0.01).x,(vec2(1,0)*0.44+vec2(cs(t*1.+-0.54))*0.09+vec2(cs(t*2.+-2.22))*0.12+vec2(cs(t*3.+-1.87))*0.02+vec2(cs(t*4.+-2.03))*0.02+vec2(cs(t*5.+-1.52))*0.01+vec2(cs(t*6.+-1.53))*0.01+vec2(cs(t*7.+-1.93))*0.01+vec2(cs(t*8.+-1.86))*0.01+vec2(cs(t*9.+-1.90))*0.01).x);
	// return vec2((vec2(1,0)*0.47+vec2(cs(t*1.+1.59))*0.12+vec2(cs(t*2.+1.18))*0.06+vec2(cs(t*3.+1.14))*0.04+vec2(cs(t*4.+1.30))*0.03+vec2(cs(t*5.+2.22))*0.03+vec2(cs(t*6.+2.56))*0.02+vec2(cs(t*7.+2.14))*0.01+vec2(cs(t*8.+1.74))*0.03+vec2(cs(t*9.+2.11))*0.02).x,(vec2(1,0)*0.41+vec2(cs(t*1.+1.22))*0.04+vec2(cs(t*2.+-1.54))*0.05+vec2(cs(t*3.+-0.87))*0.05+vec2(cs(t*4.+1.56))*0.02+vec2(cs(t*5.+-2.99))*0.02+vec2(cs(t*6.+0.69))*0.01+vec2(cs(t*7.+-1.75))*0.03+vec2(cs(t*8.+-1.41))*0.02+vec2(cs(t*9.+-3.06))*0.01).x);
	// return vec2((vec2(1,0)*0.515+vec2(cs(t*1.+3.050))*0.144+vec2(cs(t*2.+-1.810))*0.041+vec2(cs(t*3.+2.999))*0.016+vec2(cs(t*4.+-1.576))*0.008+vec2(cs(t*5.+-2.544))*0.009+vec2(cs(t*6.+-0.606))*0.009+vec2(cs(t*7.+1.802))*0.006+vec2(cs(t*8.+2.300))*0.007+vec2(cs(t*9.+1.482))*0.003+vec2(cs(t*10.+1.727))*0.015+vec2(cs(t*11.+1.251))*0.013+vec2(cs(t*12.+-2.322))*0.012+vec2(cs(t*13.+-1.706))*0.011+vec2(cs(t*14.+-1.320))*0.003+vec2(cs(t*15.+-0.104))*0.007+vec2(cs(t*16.+-0.085))*0.003+vec2(cs(t*17.+-1.880))*0.004+vec2(cs(t*18.+0.449))*0.006+vec2(cs(t*19.+-1.462))*0.003+vec2(cs(t*20.+1.235))*0.007+vec2(cs(t*21.+-0.257))*0.004+vec2(cs(t*22.+-1.438))*0.004+vec2(cs(t*23.+0.287))*0.003+vec2(cs(t*24.+1.169))*0.001+vec2(cs(t*25.+-2.613))*0.004+vec2(cs(t*26.+1.050))*0.002+vec2(cs(t*27.+-1.064))*0.004+vec2(cs(t*29.+1.135))*0.002).x,(vec2(1,0)*0.550+vec2(cs(t*1.+3.061))*0.021+vec2(cs(t*2.+3.123))*0.003+vec2(cs(t*3.+0.527))*0.016+vec2(cs(t*4.+2.069))*0.009+vec2(cs(t*5.+1.472))*0.007+vec2(cs(t*6.+0.909))*0.013+vec2(cs(t*7.+2.297))*0.011+vec2(cs(t*8.+1.803))*0.003+vec2(cs(t*9.+2.158))*0.003+vec2(cs(t*10.+-0.746))*0.006+vec2(cs(t*11.+-1.976))*0.020+vec2(cs(t*12.+2.571))*0.003+vec2(cs(t*13.+-0.215))*0.007+vec2(cs(t*14.+-1.473))*0.020+vec2(cs(t*15.+0.351))*0.008+vec2(cs(t*16.+1.483))*0.009+vec2(cs(t*17.+-2.286))*0.010+vec2(cs(t*18.+-2.800))*0.008+vec2(cs(t*19.+-2.049))*0.003+vec2(cs(t*20.+0.051))*0.014+vec2(cs(t*21.+-2.336))*0.006+vec2(cs(t*22.+-1.486))*0.004+vec2(cs(t*23.+-2.692))*0.009+vec2(cs(t*24.+-0.624))*0.002+vec2(cs(t*25.+-2.674))*0.003+vec2(cs(t*26.+-0.065))*0.004+vec2(cs(t*27.+-2.246))*0.004+vec2(cs(t*28.+1.149))*0.003+vec2(cs(t*29.+-0.606))*0.002).x);
	// return vec2((vec2(1,0)*0.515+vec2(cs(t*1.+3.050))*0.144+vec2(cs(t*2.+-1.810))*0.041+vec2(cs(t*3.+2.999))*0.016+vec2(cs(t*4.+-1.576))*0.008+vec2(cs(t*5.+-2.544))*0.009+vec2(cs(t*6.+-0.606))*0.009+vec2(cs(t*7.+1.802))*0.006+vec2(cs(t*8.+2.300))*0.007+vec2(cs(t*9.+1.482))*0.003+vec2(cs(t*10.+1.727))*0.015+vec2(cs(t*11.+1.251))*0.013+vec2(cs(t*12.+-2.322))*0.012+vec2(cs(t*13.+-1.706))*0.011+vec2(cs(t*14.+-1.320))*0.003+vec2(cs(t*15.+-0.104))*0.007+vec2(cs(t*16.+-0.085))*0.003+vec2(cs(t*17.+-1.880))*0.004+vec2(cs(t*18.+0.449))*0.006+vec2(cs(t*19.+-1.462))*0.003+vec2(cs(t*20.+1.235))*0.007+vec2(cs(t*21.+-0.257))*0.004+vec2(cs(t*22.+-1.438))*0.004+vec2(cs(t*23.+0.287))*0.003+vec2(cs(t*24.+1.169))*0.001+vec2(cs(t*25.+-2.613))*0.004+vec2(cs(t*26.+1.050))*0.002+vec2(cs(t*27.+-1.064))*0.004+vec2(cs(t*28.+2.490))*0.001+vec2(cs(t*29.+1.135))*0.002+vec2(cs(t*30.+3.115))*0.001+vec2(cs(t*31.+1.550))*0.001+vec2(cs(t*32.+0.848))*0.001+vec2(cs(t*33.+-1.253))*0.001+vec2(cs(t*34.+-1.033))*0.001+vec2(cs(t*35.+-0.804))*0.001+vec2(cs(t*36.+-1.520))*0.001+vec2(cs(t*37.+-2.437))*0.000+vec2(cs(t*38.+-0.150))*0.001+vec2(cs(t*39.+-1.345))*0.002).x,(vec2(1,0)*0.550+vec2(cs(t*1.+3.061))*0.021+vec2(cs(t*2.+3.123))*0.003+vec2(cs(t*3.+0.527))*0.016+vec2(cs(t*4.+2.069))*0.009+vec2(cs(t*5.+1.472))*0.007+vec2(cs(t*6.+0.909))*0.013+vec2(cs(t*7.+2.297))*0.011+vec2(cs(t*8.+1.803))*0.003+vec2(cs(t*9.+2.158))*0.003+vec2(cs(t*10.+-0.746))*0.006+vec2(cs(t*11.+-1.976))*0.020+vec2(cs(t*12.+2.571))*0.003+vec2(cs(t*13.+-0.215))*0.007+vec2(cs(t*14.+-1.473))*0.020+vec2(cs(t*15.+0.351))*0.008+vec2(cs(t*16.+1.483))*0.009+vec2(cs(t*17.+-2.286))*0.010+vec2(cs(t*18.+-2.800))*0.008+vec2(cs(t*19.+-2.049))*0.003+vec2(cs(t*20.+0.051))*0.014+vec2(cs(t*21.+-2.336))*0.006+vec2(cs(t*22.+-1.486))*0.004+vec2(cs(t*23.+-2.692))*0.009+vec2(cs(t*24.+-0.624))*0.002+vec2(cs(t*25.+-2.674))*0.003+vec2(cs(t*26.+-0.065))*0.004+vec2(cs(t*27.+-2.246))*0.004+vec2(cs(t*28.+1.149))*0.003+vec2(cs(t*29.+-0.606))*0.002+vec2(cs(t*30.+-1.000))*0.002+vec2(cs(t*31.+-1.710))*0.003+vec2(cs(t*32.+-1.095))*0.003+vec2(cs(t*33.+-0.983))*0.001+vec2(cs(t*34.+-2.483))*0.003+vec2(cs(t*35.+2.242))*0.001+vec2(cs(t*36.+-0.447))*0.001+vec2(cs(t*37.+-1.382))*0.002+vec2(cs(t*38.+-2.819))*0.002+vec2(cs(t*39.+1.322))*0.001).x);

	// return vec2((vec2(1,0)*0.47+vec2(cs(t*1.+1.59))*0.12+vec2(cs(t*2.+1.18))*0.06+vec2(cs(t*3.+1.14))*0.04+vec2(cs(t*4.+1.30))*0.03+vec2(cs(t*5.+2.22))*0.03+vec2(cs(t*6.+2.56))*0.02+vec2(cs(t*7.+2.14))*0.01+vec2(cs(t*8.+1.74))*0.03+vec2(cs(t*9.+2.11))*0.02+vec2(cs(t*10.+1.25))*0.01+vec2(cs(t*11.+1.92))*0.02+vec2(cs(t*12.+1.94))*0.02+vec2(cs(t*13.+1.41))*0.00+vec2(cs(t*14.+1.26))*0.01+vec2(cs(t*15.+1.92))*0.00+vec2(cs(t*16.+1.03))*0.00+vec2(cs(t*17.+2.21))*0.01+vec2(cs(t*18.+1.44))*0.01+vec2(cs(t*19.+1.91))*0.01+vec2(cs(t*20.+1.86))*0.01+vec2(cs(t*21.+1.51))*0.01+vec2(cs(t*22.+1.27))*0.01+vec2(cs(t*23.+1.86))*0.00+vec2(cs(t*24.+1.38))*0.00+vec2(cs(t*25.+1.41))*0.01+vec2(cs(t*26.+1.68))*0.01+vec2(cs(t*27.+1.65))*0.00+vec2(cs(t*28.+1.45))*0.01+vec2(cs(t*29.+1.52))*0.01).x,(vec2(1,0)*0.41+vec2(cs(t*1.+1.22))*0.04+vec2(cs(t*2.+-1.54))*0.05+vec2(cs(t*3.+-0.87))*0.05+vec2(cs(t*4.+1.56))*0.02+vec2(cs(t*5.+-2.99))*0.02+vec2(cs(t*6.+0.69))*0.01+vec2(cs(t*7.+-1.75))*0.03+vec2(cs(t*8.+-1.41))*0.02+vec2(cs(t*9.+-3.06))*0.01+vec2(cs(t*10.+1.94))*0.01+vec2(cs(t*11.+0.24))*0.01+vec2(cs(t*12.+-1.95))*0.01+vec2(cs(t*13.+1.07))*0.00+vec2(cs(t*14.+-2.32))*0.00+vec2(cs(t15.+-2.48))*0.01+vec2(cs(t*16.+2.89))*0.01+vec2(cs(t*17.+-0.82))*0.00+vec2(cs(t*18.+-2.24))*0.01+vec2(cs(t*19.+-1.44))*0.00+vec2(cs(t*20.+-0.60))*0.00+vec2(cs(t*21.+-0.89))*0.01+vec2(cs(t*22.+-2.79))*0.00+vec2(cs(t*23.+0.95))*0.00+vec2(cs(t*24.+-0.48))*0.00+vec2(cs(t*25.+-3.04))*0.00+vec2(cs(t*26.+-1.57))*0.00+vec2(cs(t*27.+-1.89))*0.00+vec2(cs(t*28.+-2.71))*0.00+vec2(cs(t*29.+-0.36))*0.00).x);
	// return vec2((vec2(1,0)*0.4866+vec2(cs(t*1.+1.6178))*0.1645+vec2(cs(t*2.+1.4774))*0.0711+vec2(cs(t*3.+1.4957))*0.0355+vec2(cs(t*4.+1.6020))*0.0343+vec2(cs(t*5.+1.5117))*0.0316+vec2(cs(t*6.+1.6650))*0.0347+vec2(cs(t*7.+1.3879))*0.0329+vec2(cs(t*8.+1.2335))*0.0260+vec2(cs(t*9.+1.1626))*0.0170+vec2(cs(t*10.+1.4298))*0.0101+vec2(cs(t*11.+1.7201))*0.0158+vec2(cs(t*12.+1.2996))*0.0103+vec2(cs(t*13.+1.5930))*0.0118+vec2(cs(t*14.+1.2258))*0.0070+vec2(cs(t*15.+1.4838))*0.0108+vec2(cs(t*16.+1.1900))*0.0088+vec2(cs(t*17.+1.8061))*0.0085+vec2(cs(t*18.+1.1548))*0.0109+vec2(cs(t*19.+1.6046))*0.0111+vec2(cs(t*20.+1.4060))*0.0063+vec2(cs(t*21.+1.3405))*0.0059+vec2(cs(t*22.+1.4631))*0.0067+vec2(cs(t*23.+0.9467))*0.0081+vec2(cs(t*24.+1.4053))*0.0094+vec2(cs(t*25.+0.6229))*0.0056+vec2(cs(t*26.+1.2225))*0.0104+vec2(cs(t*27.+1.5057))*0.0063+vec2(cs(t*28.+1.4009))*0.0058+vec2(cs(t*29.+1.3173))*0.0058).x,(vec2(1,0)*0.2556+vec2(cs(t*1.+0.9859))*0.0157+vec2(cs(t*2.+1.7887))*0.0060+vec2(cs(t*3.+-1.4367))*0.0139+vec2(cs(t*4.+-2.1087))*0.0178+vec2(cs(t*5.+-2.3012))*0.0131+vec2(cs(t*6.+-2.7815))*0.0169+vec2(cs(t*7.+-2.6597))*0.0080+vec2(cs(t*8.+2.5510))*0.0018+vec2(cs(t*9.+-0.8981))*0.0030+vec2(cs(t*10.+1.5537))*0.0073+vec2(cs(t*11.+1.5057))*0.0048+vec2(cs(t*12.+2.6603))*0.0058+vec2(cs(t*13.+-1.6394))*0.0124+vec2(cs(t*14.+-0.5276))*0.0067+vec2(cs(t*15.+0.3133))*0.0064+vec2(cs(t*16.+0.1284))*0.0040+vec2(cs(t*17.+-2.8828))*0.0055+vec2(cs(t*18.+-0.2082))*0.0119+vec2(cs(t*19.+1.4213))*0.0075+vec2(cs(t*20.+-0.3836))*0.0049+vec2(cs(t*21.+1.8723))*0.0069+vec2(cs(t*22.+0.3248))*0.0043+vec2(cs(t*23.+2.4227))*0.0013+vec2(cs(t*24.+1.2062))*0.0043+vec2(cs(t*25.+1.4285))*0.0044+vec2(cs(t*26.+-2.5280))*0.0025+vec2(cs(t*27.+1.0875))*0.0058+vec2(cs(t*28.+0.2222))*0.0022+vec2(cs(t*29.+1.8585))*0.0056).x);
	return vec2(cos(t*0.+3.14)*0.11+cos(t*1.+-1.46)*0.30+cos(t*2.+-1.04)*0.13+cos(t*3.+-1.30)*0.07+cos(t*4.+-1.53)*0.07+cos(t*5.+-1.22)*0.04+cos(t*6.+-1.02)*0.03+cos(t*7.+-2.84)*0.02+cos(t*8.+-1.34)*0.03+cos(t*9.+-1.76)*0.03+cos(t*10.+-1.53)*0.03+cos(t*11.+-2.48)*0.03+cos(t*12.+-1.82)*0.01,cos(t*0.+3.14)*0.10+cos(t*1.+0.12)*0.07+cos(t*2.+1.02)*0.08+cos(t*3.+0.66)*0.06+cos(t*4.+0.12)*0.02+cos(t*5.+0.80)*0.05+cos(t*6.+-0.15)*0.03+cos(t*7.+1.10)*0.02+cos(t*8.+0.56)*0.02+cos(t*9.+0.17)*0.06+cos(t*10.+-0.71)*0.01+cos(t*11.+0.47)*0.01+cos(t*12.+-0.19)*0.04);
	return vec2(0.0792+cos(t*1.+-1.58)*0.23+cos(t*2.+-1.24)*0.14+cos(t*3.+-1.12)*0.09+cos(t*4.+-0.76)*0.06+cos(t*5.+-0.59)*0.05+cos(t*6.+0.56)*0.03+cos(t*7.+-2.73)*0.03+cos(t*8.+-1.26)*0.02+cos(t*9.+-1.44)*0.02+cos(t*10.+-2.09)*0.03+cos(t*11.+-2.18)*0.01+cos(t*12.+-1.91)*0.02,cos(t*0.+3.14)*0.05+cos(t*1.+0.35)*0.06+cos(t*2.+0.54)*0.09+cos(t*3.+0.44)*0.03+cos(t*4.+1.02)*0.07+cos(t*5.+-0.04)*0.00+cos(t*6.+0.39)*0.03+cos(t*7.+-1.48)*0.02+cos(t*8.+-3.06)*0.02+cos(t*9.+-0.39)*0.07+cos(t*10.+-0.39)*0.03+cos(t*11.+-0.03)*0.04+cos(t*12.+-2.08)*0.02);
}



vec3 curve (float ratio) {
	ratio *= TAU;
	float radius = .8;
	vec3 pos = vec3(radius,0,0);
	pos.yx *= rot(ratio);
	// pos.yz *= rot(ratio*8.);
	// pos.yx *= rot(ratio*4.);
	return pos;
}

void main () {
	vUV = anchor.xy;
	vColor = vec4(1);
	vec3 pos = normalize(position);
	float angle = time + anchor.y;
	// pos.xy *= rotation(angle * 2.9);
	// pos.zy *= rotation(angle * 1.5);
	// pos.y += anchor.x * 0.02;
	float ratio = (vUV.y*.5+.5);// + quantity.x * 1.;
	// pos = curve(ratio);
	vec3 next = curve(ratio+0.1);
	vec2 y = normalize(next.xy-pos.xy);
	vec2 x = vec2(y.y,-y.x);

	float radius = 0.02;
	// radius += 0.1 * abs(pos.z);

	// vColor *= 1.-abs(pos.z);

	// float fade = 1.0;
	// fade *= smoothstep(0.0, 0.5, vUV.y*0.5+0.5);
	// fade *= (1.-abs(vUV.x));
	// fade *= (1.-abs(vUV.y));

	float t = anchor.y*.5+.5;

	// radius -= .1 * fade;
	pos.xy = fourier()*2.;//(fourier()*2.-1.)*2.;
	// t = mod(t + time, 1.);
	// radius *= t;
	// pos.y += .5;

	vNormal = normalize(pos);
	// vec3 forward = cross(vNormal, vec3(0,1,0));
	// vec3 right = cross(normalize(forward), vNormal);
	// pos.xyz += right * vUV.x * radius;
	pos.y += anchor.x * radius;
	pos.x /= resolution.x / resolution.y;
	// pos.z = t;
	// pos.xy += x * vUV.x * radius;
	// pos.y += vUV.x * radius;
	vView = vec3(0,0,-5)-pos.xyz;
	// pos.y *= resolution.x / resolution.y;
	// pos.x *= resolution.x / resolution.y;
	gl_Position = vec4(pos, 1);
}